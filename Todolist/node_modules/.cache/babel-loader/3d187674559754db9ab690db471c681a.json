{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program\\\\Reactjs\\\\Todolist\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nconst item = {\n  id: v4(),\n  name: \"Clean the house\"\n};\nconst item1 = {\n  id: v4(),\n  name: \"Wash the car\"\n};\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Today Task\",\n      items: [item, item1]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    },\n    \"abandon\": {\n      title: \"Abandon\",\n      items: []\n    },\n    \"pending\": {\n      title: \"Pending\",\n      items: []\n    }\n  });\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) {\n      return;\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    } // Creating a copy of item before removing it from state\n\n\n    const itemCopy = { ...state[source.droppableId].items[source.index]\n    };\n    setState(prev => {\n      prev = { ...prev\n      }; // Remove from previous items array\n\n      prev[source.droppableId].items.splice(source.index, 1); // Adding to new items array location\n\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  const addItem = () => {\n    setState(prev => {\n      return { ...prev,\n        todo: {\n          title: \"Today Task\",\n          items: [{\n            id: v4(),\n            name: text\n          }, ...prev.todo.items]\n        }\n      };\n    });\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, _.map(state, (data, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, data.title), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, (provided, snapshot) => {\n      console.log(snapshot);\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        className: \"droppable-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }), data.items.map((el, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: el.id,\n          index: index,\n          draggableId: el.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 27\n          }\n        }, (provided, snapshot) => {\n          console.log(snapshot);\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            className: `item ${snapshot.isDragging && \"dragging\"}`,\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }\n          }), el.name);\n        });\n      }), provided.placeholder);\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Program/Reactjs/Todolist/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","_","v4","item","id","name","item1","App","text","setText","state","setState","title","items","handleDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","addItem","todo","e","target","value","map","data","key","provided","snapshot","console","log","innerRef","droppableProps","el","isDragging","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\nimport _ from \"lodash\";\r\nimport {v4} from \"uuid\";\r\n\r\nconst item = {\r\n  id: v4(),\r\n  name: \"Clean the house\"\r\n}\r\n\r\nconst item1 = {\r\n  id: v4(),\r\n  name: \"Wash the car\"\r\n}\r\n\r\nfunction App() {\r\n  const [text, setText] = useState(\"\") \r\n  const [state, setState] = useState({\r\n    \"todo\": {\r\n      title: \"Today Task\",\r\n      items: [item, item1]\r\n    },\r\n    \"in-progress\": {\r\n      title: \"In Progress\",\r\n      items: []\r\n    },\r\n    \"done\": {\r\n      title: \"Completed\",\r\n      items: []\r\n    },\r\n    \"abandon\": {\r\n      title: \"Abandon\",\r\n      items: []\r\n    },\r\n    \"pending\": {\r\n      title: \"Pending\",\r\n      items: []\r\n    }\r\n  })\r\n\r\n  const handleDragEnd = ({destination, source}) => {\r\n    if (!destination) {\r\n      return\r\n    }\r\n\r\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\r\n      return\r\n    }\r\n\r\n    // Creating a copy of item before removing it from state\r\n    const itemCopy = {...state[source.droppableId].items[source.index]}\r\n\r\n    setState(prev => {\r\n      prev = {...prev}\r\n      // Remove from previous items array\r\n      prev[source.droppableId].items.splice(source.index, 1)\r\n\r\n\r\n      // Adding to new items array location\r\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\r\n\r\n      return prev\r\n    })\r\n  }\r\n\r\n  const addItem = () => {\r\n    setState(prev => {\r\n      return {\r\n        ...prev,\r\n        todo: {\r\n          title: \"Today Task\",\r\n          items: [\r\n            {\r\n              id: v4(),\r\n              name: text\r\n            },\r\n            ...prev.todo.items\r\n          ]\r\n        }\r\n      }\r\n    })\r\n\r\n    setText(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n        <button onClick={addItem}>Add</button>\r\n      </div>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {_.map(state, (data, key) => {\r\n          return(\r\n            <div key={key} className={\"column\"}>\r\n              <h3>{data.title}</h3>\r\n              <Droppable droppableId={key}>\r\n                {(provided, snapshot) => {\r\n                  console.log(snapshot)\r\n                  return(\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className={\"droppable-col\"}\r\n                    >\r\n                      {data.items.map((el, index) => {\r\n                        return(\r\n                          <Draggable key={el.id} index={index} draggableId={el.id}>\r\n                            {(provided, snapshot) => {\r\n                              console.log(snapshot)\r\n                              return(\r\n                                <div\r\n                                  className={`item ${snapshot.isDragging && \"dragging\"}`}\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  {el.name}\r\n                                </div>\r\n                              )\r\n                            }}\r\n                          </Draggable>\r\n                        )\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )\r\n                }}\r\n              </Droppable>\r\n            </div>\r\n          )\r\n        })}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}