{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program\\\\TodoList\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nconst item = {\n  id: v4(),\n  name: \"Clean the house\"\n};\nconst item2 = {\n  id: v4(),\n  name: \"Wash the car\"\n};\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Today Task\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    }\n  });\n\n  const handleDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) {\n      return;\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    } // Creating a copy of item before removing it from state\n\n\n    const itemCopy = { ...state[source.droppableId].items[source.index]\n    };\n    setState(prev => {\n      prev = { ...prev\n      }; // Remove from previous items array\n\n      prev[source.droppableId].items.splice(source.index, 1); // Adding to new items array location\n\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  const addItem = () => {\n    setState(prev => {\n      return { ...prev,\n        todo: {\n          title: \"Todo\",\n          items: [{\n            id: v4(),\n            name: text\n          }, ...prev.todo.items]\n        }\n      };\n    });\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, _.map(state, (data, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, data.title), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, (provided, snapshot) => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        className: \"droppable-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }), data.items.map((el, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: el.id,\n          index: index,\n          draggableId: el.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 27\n          }\n        }, (provided, snapshot) => {\n          console.log(snapshot);\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            className: `item ${snapshot.isDragging && \"dragging\"}`,\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }\n          }), el.name);\n        });\n      }), provided.placeholder);\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Program/TodoList/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","_","v4","item","id","name","item2","App","text","setText","state","setState","title","items","handleDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","addItem","todo","e","target","value","map","data","key","provided","snapshot","innerRef","droppableProps","el","console","log","isDragging","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport {v4} from \"uuid\";\n\nconst item = {\n  id: v4(),\n  name: \"Clean the house\"\n}\n\nconst item2 = {\n  id: v4(),\n  name: \"Wash the car\"\n}\n\nfunction App() {\n  const [text, setText] = useState(\"\")\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Today Task\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    },\n    \n  })\n\n  const handleDragEnd = ({destination, source}) => {\n    if (!destination) {\n      return\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return\n    }\n\n    // Creating a copy of item before removing it from state\n    const itemCopy = {...state[source.droppableId].items[source.index]}\n\n    setState(prev => {\n      prev = {...prev}\n      // Remove from previous items array\n      prev[source.droppableId].items.splice(source.index, 1)\n\n\n      // Adding to new items array location\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\n\n      return prev\n    })\n  }\n\n  const addItem = () => {\n    setState(prev => {\n      return {\n        ...prev,\n        todo: {\n          title: \"Todo\",\n          items: [\n            {\n              id: v4(),\n              name: text\n            },\n            ...prev.todo.items\n          ]\n        }\n      }\n    })\n\n    setText(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\n        <button onClick={addItem}>Add</button>\n      </div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {_.map(state, (data, key) => {\n          return(\n            <div key={key} className={\"column\"}>\n              <h3>{data.title}</h3>\n              <Droppable droppableId={key}>\n                {(provided, snapshot) => {\n                  return(\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      className={\"droppable-col\"}\n                    >\n                      {data.items.map((el, index) => {\n                        return(\n                          <Draggable key={el.id} index={index} draggableId={el.id}>\n                            {(provided, snapshot) => {\n                              console.log(snapshot)\n                              return(\n                                <div\n                                  className={`item ${snapshot.isDragging && \"dragging\"}`}\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  {el.name}\n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n            </div>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}